version: 2.1
master_only: &master_only
  filters:
    branches:
      only: master
commands:
  # Restore cache
  restore_npm_cache_cmd:
    steps:
      # Restore npm dependencies from cache
      - restore_cache:
          name: Restore npm dependencies from cache
          keys:
            # Find a cache corresponding to this specific package-lock.json
            - v1-npm-dependencies-{{ checksum "package-lock.json" }}
            # Fallback cache to be used
            - v1-npm-dependencies-
  restore_prod_cache_cmd:
    steps:
      # Restore project build if they don't exist
      - restore_cache:
          name: Restore project build from cache
          keys: 
            - v1-project-build-<< pipeline.number >>-{{ checksum "package-lock.json" }}
            - v1-project-build-
executors:
  docker-executor:
    docker:
      - image: circleci/node:10-browsers
jobs:
  # The pre-check job
  pre-check:
    working_directory: ~/personal-assistant/frontend
    executor: docker-executor
    steps:
      # Checkout the code from the branch into the working_directory
      - checkout:
          path: ~/personal-assistant
      # Log the current branch
      - run:
          name: Show current branch
          command: echo ${CIRCLE_BRANCH}
      # Restore local dependencies from cache
      - restore_npm_cache_cmd
      # Install project dependencies
      - run:
          name: Install local dependencies
          command: npm install
      # Lint the source code
      - run:
          name: Linting
          command: npm run lint
      # Unit test the source code
      - run:
          name: Unit testing
          command: npm run test:ci
  # The build job
  build:
    working_directory: ~/personal-assistant/frontend
    executor: docker-executor
    steps:
      # Checkout the code from the branch into the working_directory
      - checkout:
          path: ~/personal-assistant
      # Log the current branch
      - run:
          name: Show current branch
          command: echo ${CIRCLE_BRANCH}
      # Setup custom environment variables
      - run:
          name: "Setting environment vars for prod env"
          command: |
            echo "export FB_API_KEY=${FB_API_KEY}" >> ${BASH_ENV}
            echo "export FB_AUTH_DOMAIN=${FB_AUTH_DOMAIN}" >> ${BASH_ENV}
            echo "export FB_DATABASE_URL=${FB_DATABASE_URL}" >> ${BASH_ENV}
            echo "export FB_PROJECT_ID=${FB_PROJECT_ID}" >> ${BASH_ENV}
            echo "export FB_STORAGE_BUCKET=${FB_STORAGE_BUCKET}" >> ${BASH_ENV}
            echo "export FB_MESSAGING_SENDER_ID=${FB_MESSAGING_SENDER_ID}" >> ${BASH_ENV}
            echo "export FB_APP_ID=${FB_APP_ID}" >> ${BASH_ENV}
            echo "export FB_MEASUREMENT_ID=${FB_MEASUREMENT_ID}" >> ${BASH_ENV}
      - run:
          name: Setup custom environment variables
          working_directory: ~/personal-assistant/.circleci
          shell: /bin/bash
          command: ./configurer.sh;
      # Restore local dependencies from cache
      - restore_npm_cache_cmd
      # Install project dependencies
      - run:
          name: Install local dependencies
          command: npm install
      - run:
          name: Build production
          command: npm run build:prod
      # Cache npm dependencies if they don't exist
      - save_cache:
          name: Saving npm cache
          key: v1-npm-dependencies-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      # Cache project build if they don't exist
      - save_cache:
          name: Saving project build cache
          key: v1-project-build-<< pipeline.number >>-{{ checksum "package-lock.json" }}
          paths:
            - dist
  test:
    working_directory: ~/personal-assistant/frontend
    executor: docker-executor
    steps:
      # Checkout the code from the branch into the working_directory
      - checkout:
          path: ~/personal-assistant
      # Log the current branch
      - run:
          name: Show current branch
          command: echo ${CIRCLE_BRANCH}
      # Restore local dependencies from cache
      - restore_npm_cache_cmd
      # Run test the source code
      - run:
          name: Jest test
          command: npm run test:ci
  deploy:
    working_directory: ~/personal-assistant/frontend
    executor: docker-executor
    steps:
      # Checkout the code from the branch into the working_directory
      - checkout:
          path: ~/personal-assistant
      # Log the current branch
      - run:
          name: Show current branch
          command: echo ${CIRCLE_BRANCH}
      # Restore local dependencies from cache
      - restore_npm_cache_cmd
      # Restore project build if they don't exist
      - restore_prod_cache_cmd
      - run:
          name: Install Firebase
          command: npm install --save-dev firebase-tools
      - run:
          name: Firebase Deploy
          command: cd ..; ./frontend/node_modules/.bin/firebase deploy --only hosting --token "$FIREBASE_TOKEN"
workflows:
  version: 2.1
  # Build testing and deploy
  build-test-deploy:
    jobs:
      - build:
          <<: *master_only
          context: personal-assistant
      - test:
          <<: *master_only
          requires:
            - build
      - deploy:
          <<: *master_only
          context: personal-assistant
          requires:
            - build
            - test
  # Pre-check code before merge into develop
  # pre-check-commit:
  #   jobs:
  #     - pre-check:
  #         filters:
  #           branches:
  #             only: develop     